{"version":3,"sources":["challengeApp.png","components/AppBar.js","graphql/mutations.js","components/LoginForm.js","components/LoginComponent.js","components/DescriptionComponent.js","graphql/queries.js","hooks/useAuthoriserUser.js","hooks/useChallenges.js","hooks/useOwnChallenges.js","components/ChallengeList.js","components/ActiveChallengeComponent.js","components/CompletedChallengeComponent.js","components/ChallengeComponent.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","AppBarComponent","user","classes","history","useHistory","useState","anchorEl","setAnchorEl","handleClose","client","useApolloClient","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","onClick","event","currentTarget","aria-controls","aria-haspopup","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","push","localStorage","clear","resetStore","Typography","variant","LOGIN","gql","EDIT_OWN_CHALLENGE","STOP_OWN_CHALLENGE","CREATE_OWN_CHALLENGE","LoginForm","setError","username","setUsername","password","setPassword","useMutation","onError","error","graphQLErrors","message","setTimeout","login","result","useEffect","data","token","value","setItem","submit","a","preventDefault","variables","onSubmit","onChange","target","type","LoginComponent","DescriptionComponent","Grid","container","justify","alignItems","item","xs","gutterBottom","align","src","challengeAppImage","height","alt","ME","ALL_CHALLENGES","ACTIVE_OWN_CHALLENGES","useAuthorizedUser","useQuery","console","log","me","useChallenges","fetchPolicy","allChallenges","undefined","useActiveOwnChallenges","activeOwnChallenges","table","minWidth","ChallengeList","challenges","ownChallenges","length","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","ownChallenge","key","scope","challenge","name","marginLeft","checkedIcon","fill","fontSize","uncheckedIcon","ActiveChallengeComponent","setValue","entries","refetchQueries","query","editChallenge","dayjs","startDate","format","endDate","Calendar","e","challengeID","entry","minDate","Date","maxDate","allowPartialRange","tileContent","date","includes","Check","Close","CompletedChallengeComponent","duration","abortDate","ChallengeComponent","today","add","stopChallenge","activeChallenge","find","c","active","passiveChallenge","description","createChallenge","href","link","Button","userID","Notify","errorMessage","style","App","setErrorMessage","match","useRouteMatch","params","path","exact","authLink","setContext","_","headers","getItem","authorization","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ea1fb88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/challengeApp.e0e8a1ad.png\";","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  MenuItem,\n  Menu,\n  Toolbar,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport { useApolloClient } from \"@apollo/client\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst AppBarComponent = ({ user }) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const client = useApolloClient();\n\n  const logout = () => {\n    history.push(\"/\");\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleClick}\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>\n              <Link to=\"/\">About</Link>\n            </MenuItem>\n            {user && (\n              <MenuItem onClick={handleClose}>\n                <Link to=\"/challenges\">Challenges</Link>\n              </MenuItem>\n            )}\n            <MenuItem onClick={handleClose}>\n              {user ? (\n                <Link onClick={logout}>Logout</Link>\n              ) : (\n                <Link to=\"/login\">Login</Link>\n              )}\n            </MenuItem>\n          </Menu>\n          <Typography variant=\"h6\" className={classes.title}>\n            Your Challenge App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default AppBarComponent;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;\n\nexport const EDIT_OWN_CHALLENGE = gql`\n  mutation editOwnChallenge($challengeID: String!, $entry: String!) {\n    editOwnChallenge(id: $challengeID, entry: $entry) {\n      id\n      entries\n    }\n  }\n`;\n\nexport const STOP_OWN_CHALLENGE = gql`\n  mutation editOwnChallenge($challengeID: String!, $abortDate: String) {\n    editOwnChallenge(id: $challengeID, stop: true, abortDate: $abortDate) {\n      id\n      entries\n      active\n      abortDate\n    }\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!,\n   $password: String!) {\n    createUser(username: $username, password: $password) {\n      id\n      username\n      password\n    }\n  }\n`;\n\nexport const CREATE_OWN_CHALLENGE = gql`\n  mutation createOwnChallenge($challengeID: String!,\n   $userID: String!, $description: String, $startDate: String, $endDate: String) {\n    createOwnChallenge(challengeID: $challengeID, userID: $userID, description: $description, startDate: $startDate, endDate: $endDate) {\n      challenge {\n      id \n      name\n      }\n      user {\n      id\n      username\n      }\n      description\n      startDate\n      endDate\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {useApolloClient, useMutation} from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { LOGIN } from \"../graphql/mutations\";\n\n// eslint-disable-next-line react/prop-types\nconst LoginForm = ({ setError }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  const [login, result] = useMutation(LOGIN, {\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message);\n      setTimeout(function () {\n        setError(null);\n      }, 3000);\n    },\n  });\n\n  const client = useApolloClient();\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value;\n      localStorage.setItem(\"user-token\", token);\n      history.push(\"/challenges\");\n      client.resetStore();\n    }\n  }, [result.data]); // eslint-disable-line\n\n  const submit = async (event) => {\n    event.preventDefault();\n    await login({ variables: { username, password } });\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={submit}>\n        <div>\n          username{\" \"}\n          <input\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            id=\"username\"\n          />\n        </div>\n        <div>\n          password{\" \"}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            id=\"password\"\n          />\n        </div>\n        <button type=\"submit\" id=\"login-button\">login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react'\nimport LoginForm from \"./LoginForm\";\n\n// TODO: add sign in\nconst LoginComponent = ({setError}) => {\n    return (\n        <div>\n            <LoginForm setError={setError}/>\n        </div>\n    )\n}\n\nexport default LoginComponent","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport challengeAppImage from \"../challengeApp.png\";\n\nconst DescriptionComponent = () => (\n  <div>\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <br />\n        <Typography variant=\"subtitle2\" gutterBottom align=\"center\">\n          This app is for keeping score of your monthly sport challenges and\n          sharing your accomplishments with your friends.\n        </Typography>\n      </Grid>\n      <img src={challengeAppImage} height=\"200\" alt=\"Challenge app\" />\n    </Grid>\n  </div>\n);\n\nexport default DescriptionComponent;\n","import { gql } from \"@apollo/client\";\n\nexport const ME = gql`\n  query {\n    me {\n      id\n      username\n    }\n  }\n`;\n\nexport const ALL_CHALLENGES = gql`\n  query {\n    allChallenges {\n      id\n      name\n      description\n      link\n      duration\n      ownChallenges {\n        id\n        description\n        startDate\n        endDate\n        active\n        entries\n        abortDate\n      }\n    }\n  }\n`;\n\nexport const ACTIVE_OWN_CHALLENGES = gql`\n  query {\n    activeOwnChallenges {\n      id\n      challenge {\n        id\n        name\n      }\n      user {\n        username\n      }\n      description\n      startDate\n      endDate\n      active\n      entries\n      abortDate\n    }\n  }\n`;\n","import {useQuery} from '@apollo/client'\nimport {ME} from \"../graphql/queries\";\n\nconst useAuthorizedUser = () => {\n    const { data } = useQuery(ME);\n    console.log('data meeee: ', data)\n    return data ? data.me : null;\n};\n\nexport default useAuthorizedUser;","import { useQuery } from \"@apollo/client\";\nimport {ALL_CHALLENGES} from \"../graphql/queries\";\n\nconst useChallenges = () => {\n  const { data } = useQuery(ALL_CHALLENGES, {\n    fetchPolicy: \"cache-and-network\",\n  });\n  return data ? data.allChallenges : undefined;\n};\n\nexport default useChallenges;\n","import { useQuery } from \"@apollo/client\";\nimport {ACTIVE_OWN_CHALLENGES} from \"../graphql/queries\";\n\nconst useActiveOwnChallenges = () => {\n  const { data } = useQuery(ACTIVE_OWN_CHALLENGES, {\n    fetchPolicy: \"cache-and-network\",\n  });\n  return data ? data.activeOwnChallenges : undefined;\n};\n\nexport default useActiveOwnChallenges;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport useChallenges from \"../hooks/useChallenges\";\nimport useActiveOwnChallenges from \"../hooks/useOwnChallenges\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst ChallengeList = ({ username }) => {\n  const classes = useStyles();\n  const challenges = useChallenges();\n  const ownChallenges = useActiveOwnChallenges();\n  return (\n    <div>\n      <p>\n        Logged in as <b>{username}</b>\n      </p>\n      {ownChallenges && ownChallenges.length > 0 && (\n        <div>\n          <h2>Ongoing Challenges</h2>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"own challenges table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <b>Name</b>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ownChallenges.map((ownChallenge) => (\n                  <TableRow key={ownChallenge.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Link to={`challenges/${ownChallenge.challenge.id}`}>\n                        {ownChallenge.challenge.name}\n                      </Link>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      )}\n\n      <h2>All Challenges</h2>\n      <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"all challenges table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <b>Name</b>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {challenges &&\n                challenges.map((challenge) => (\n                  <TableRow key={challenge.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Link to={`challenges/${challenge.id}`}>\n                        {challenge.name}\n                      </Link>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default ChallengeList;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Calendar } from \"react-calendar\";\nimport { Check, Close } from \"@material-ui/icons\";\nimport \"react-calendar/dist/Calendar.css\";\nimport dayjs from \"dayjs\";\nimport { useMutation } from \"@apollo/client\";\nimport { EDIT_OWN_CHALLENGE } from \"../graphql/mutations\";\nimport { ACTIVE_OWN_CHALLENGES } from \"../graphql/queries\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1,\n    marginBottom: 1,\n  },\n  checkedIcon: {\n    fill: \"green\",\n    fontSize: \"1rem\",\n  },\n  uncheckedIcon: {\n    fill: \"red\",\n    fontSize: \"1rem\",\n  },\n}));\n\nconst ActiveChallengeComponent = ({ challenge }) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(null);\n  const entries = challenge.entries;\n  const [editChallenge] = useMutation(EDIT_OWN_CHALLENGE, {\n    refetchQueries: [{ query: ACTIVE_OWN_CHALLENGES }],\n    onError: (error) => {\n      console.log(\"error: \", error);\n      //  setError(error.toString())\n    },\n  });\n  const setEntry = (e) => {\n    setValue(e);\n    return editChallenge({\n      variables: {\n        challengeID: challenge.id,\n        entry: dayjs(e).format(\"YYYY-MM-DD\"),\n      },\n    });\n  };\n  return (\n    <div>\n      <p>Started: {dayjs(challenge.startDate).format(\"DD.MM.YYYY\")}</p>\n      <p>Ending: {dayjs(challenge.endDate).format(\"DD.MM.YYYY\")}</p>\n      <p>\n        Click a day on calendar to mark as done. <br />\n        You can edit past challenge days but you cannot alter future days in advance.\n      </p>\n      <Calendar\n        onChange={setEntry}\n        value={value}\n        minDate={new Date(challenge.startDate)}\n        maxDate={new Date()}\n        allowPartialRange={true}\n        tileContent={({ date }) =>\n          date < dayjs(challenge.startDate) ||\n          date > dayjs(challenge.endDate) ? null : entries.includes(\n              dayjs(date).format(\"YYYY-MM-DD\")\n            ) ? (\n            <Check className={classes.checkedIcon} />\n          ) : (\n            <Close className={classes.uncheckedIcon} />\n          )\n        }\n      />\n    </div>\n  );\n};\n\nexport default ActiveChallengeComponent;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nconst CompletedChallengeComponent = ({ challenge, duration }) => {\n  return (\n    <div>\n      <p>\n        {`Challenge time: ${dayjs(challenge.startDate).format(\n          \"DD.MM.YYYY\"\n        )} - ${dayjs(challenge.endDate).format(\"DD.MM.YYYY\")}`}\n      </p>\n      {challenge.abortDate ? (\n        <p>\n          {`Challenge was aborted ${dayjs(challenge.abortDate).format(\n            \"DD.MM.YYYY\"\n          )}.`}\n        </p>\n      ) : (\n        <p>You finished the challenge!</p>\n      )}\n      <p>{`Results: ${challenge.entries.length}/${duration} days done`}</p>\n    </div>\n  );\n};\n\nexport default CompletedChallengeComponent;\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation } from \"@apollo/client\";\nimport ActiveChallengeComponent from \"./ActiveChallengeComponent\";\nimport { CREATE_OWN_CHALLENGE, STOP_OWN_CHALLENGE } from \"../graphql/mutations\";\nimport { ALL_CHALLENGES, ACTIVE_OWN_CHALLENGES } from \"../graphql/queries\";\nimport dayjs from \"dayjs\";\nimport CompletedChallengeComponent from \"./CompletedChallengeComponent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1,\n    marginBottom: 1,\n  },\n}));\n\nconst ChallengeComponent = ({ challenge, user }) => {\n  const today = dayjs();\n  const endDate = dayjs().add(challenge.duration, \"day\");\n  const classes = useStyles();\n  const [stopChallenge] = useMutation(STOP_OWN_CHALLENGE, {\n    refetchQueries: [{ query: ACTIVE_OWN_CHALLENGES }],\n    onError: (error) => {\n      console.log(\"error: \", error);\n    },\n  });\n  const activeChallenge = challenge.ownChallenges.find((c) => c.active);\n\n  const abortChallenge = () => {\n    return stopChallenge({\n      variables: {\n        challengeID: activeChallenge.id,\n        abortDate: today.format(\"YYYY-MM-DD\"),\n      },\n    });\n  };\n\n  const checkDate = () =>\n    activeChallenge &&\n    today > endDate &&\n    stopChallenge({\n      variables: {\n        challengeID: activeChallenge.id,\n      },\n    });\n  checkDate();\n  const passiveChallenge =\n    challenge.ownChallenges.length > 0 &&\n    !activeChallenge &&\n    challenge.ownChallenges[challenge.ownChallenges.length - 1];\n  const [description, setDescription] = useState(\"testing... \"); // TODO: implement an input\n  const [createChallenge] = useMutation(CREATE_OWN_CHALLENGE, {\n    refetchQueries: [{ query: ALL_CHALLENGES }],\n    onError: (error) => {\n      console.log(\"error: \", error);\n      //  setError(error.toString())\n    },\n  });\n\n  const startChallenge = () => {\n    return createChallenge({\n      variables: {\n        challengeID: challenge.id,\n        userID: user.id,\n        startDate: today.format(\"YYYY-MM-DD\"),\n        endDate: endDate.format(\"YYYY-MM-DD\"),\n        description: description,\n      },\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1>{challenge.name}</h1>\n      <p>{challenge.description}</p>\n      <p>\n        <a href={challenge.link} target=\"_blank\">\n          {challenge.link}\n        </a>\n      </p>\n      <p>Challenge duration: {challenge.duration} days</p>\n      {activeChallenge ? (\n        <div>\n          <ActiveChallengeComponent challenge={activeChallenge} />\n          <br />\n          <Button variant=\"outlined\" color=\"red\" onClick={abortChallenge}>\n            Abort challenge\n          </Button>\n        </div>\n      ) : (\n        <div>\n          {passiveChallenge && (\n            <CompletedChallengeComponent challenge={passiveChallenge} duration={challenge.duration} />\n          )}\n          <br />\n          <Button variant=\"outlined\" color=\"primary\" onClick={startChallenge}>\n            {passiveChallenge\n              ? \"Restart the challenge!\"\n              : \"Start the challenge!\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChallengeComponent;\n","import React, { useState } from \"react\";\nimport AppBarComponent from \"./components/AppBar\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport DescriptionComponent from \"./components/DescriptionComponent\";\nimport useAuthorizedUser from \"./hooks/useAuthoriserUser\";\nimport ChallengeList from \"./components/ChallengeList\";\nimport useChallenges from \"./hooks/useChallenges\";\nimport ChallengeComponent from \"./components/ChallengeComponent\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ActiveChallengeComponent from \"./components/ActiveChallengeComponent\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n// eslint-disable-next-line react/prop-types\nconst Notify = ({ errorMessage }) => {\n  if (!errorMessage) {\n    return null;\n  }\n  return <div style={{ color: \"red\" }}>{errorMessage}</div>;\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const user = useAuthorizedUser();\n  console.log(\"user: \", user);\n\n  const notify = (message) => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 10000);\n  };\n\n  const challenges = useChallenges();\n\n  const match = useRouteMatch(\"/challenges/:id\");\n\n  const challenge =\n    match && challenges\n      ? challenges.find((challenge) => challenge.id === match.params.id)\n      : null;\n\n  return (\n    <div className={classes.root}>\n      <AppBarComponent user={user} />\n      <Notify errorMessage={errorMessage} />\n      <Switch>\n        <Route path=\"/login\">\n          <LoginComponent setError={setErrorMessage} />\n        </Route>\n        <Route path=\"/challenges/:id\" exact>\n          {challenge && <ChallengeComponent challenge={challenge} user={user} />}\n        </Route>\n        <Route path=\"/ownChallenges/:id\" exact>\n          {challenge && <ActiveChallengeComponent challenge={challenge} />}\n        </Route>\n        <Route path=\"/challenges\">\n          {user && <ChallengeList username={user.username} />}\n        </Route>\n\n        <Route path=\"/\">\n          <DescriptionComponent />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { setContext } from \"apollo-link-context\";\nimport App from \"./App\";\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n  split,\n} from \"@apollo/client\";\n\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"user-token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    },\n  };\n});\n\nconst httpLink = new HttpLink({ uri: \"http://localhost:4000\" });\n\nconst wsLink = new WebSocketLink({\n  uri: \"ws://localhost:4000/graphql\",\n  options: {\n    reconnect: true,\n  },\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink,\n});\n\nReactDOM.render(\n  <Router>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}